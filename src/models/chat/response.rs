use serde::{Deserialize, Serialize};

use super::ChatMessage;

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ChatResponse {
    /// Unique identifier for the chat completion
    #[serde(skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,

    /// List of chat completion choices
    #[serde(skip_serializing_if = "Option::is_none")]
    pub choices: Option<Vec<ChatChoice>>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ChatChoice {
    /// The message generated by the model
    #[serde(skip_serializing_if = "Option::is_none")]
    pub message: Option<ChatMessage>,
}
